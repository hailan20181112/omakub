# 文件压缩与解压缩函数
# 压缩指定目录或文件为tar.gz格式
compress() { tar -czf "${1%/}.tar.gz" "${1%/}"; }
# 解压tar.gz文件
alias decompress="tar -xzf"

# 将Gnome截屏录像生成的webm文件转换为更兼容的mp4格式
webm2mp4() {
  input_file="$1"  # 输入文件路径
  output_file="${input_file%.webm}.mp4"  # 输出文件路径（替换.webm为.mp4）
  # 使用ffmpeg进行转换，设置视频编码为libx264，音频编码为aac
  ffmpeg -i "$input_file" -c:v libx264 -preset slow -crf 22 -c:a aac -b:a 192k "$output_file"
}

# 将ISO镜像文件写入SD卡
iso2sd() {
  # 检查参数数量是否正确
  if [ $# -ne 2 ]; then
    # 显示使用说明
    echo "Usage: iso2sd <input_file> <output_device>"
    echo "Example: iso2sd ~/Downloads/ubuntu-25.04-desktop-amd64.iso /dev/sda"
    echo -e "\nAvailable SD cards:"
    # 列出可用的SD卡设备
    lsblk -d -o NAME | grep -E '^sd[a-z]' | awk '{print "/dev/"$1}'
  else
    # 使用dd命令将ISO文件写入SD卡
    sudo dd bs=4M status=progress oflag=sync if="$1" of="$2"
    # 弹出SD卡
    sudo eject $2
  fi
}

# 为网页应用创建桌面启动器
web2app() {
  # 检查参数数量是否正确
  if [ "$#" -ne 3 ]; then
    echo "Usage: web2app <AppName> <AppURL> <IconURL> (IconURL must be in PNG -- use https://dashboardicons.com)"
    return 1
  fi

  # 设置变量
  local APP_NAME="$1"  # 应用名称
  local APP_URL="$2"   # 应用URL
  local ICON_URL="$3"  # 图标URL
  local ICON_DIR="$HOME/.local/share/applications/icons"  # 图标目录
  local DESKTOP_FILE="$HOME/.local/share/applications/${APP_NAME}.desktop"  # 桌面文件路径
  local ICON_PATH="${ICON_DIR}/${APP_NAME}.png"  # 图标文件路径

  # 创建图标目录（如果不存在）
  mkdir -p "$ICON_DIR"

  # 下载图标
  if ! curl -sL -o "$ICON_PATH" "$ICON_URL"; then
    echo "Error: Failed to download icon."
    return 1
  fi

  # 创建桌面文件
  cat > "$DESKTOP_FILE" <<EOF
[Desktop Entry]
Version=1.0
Name=$APP_NAME
Comment=$APP_NAME
Exec=google-chrome --app="$APP_URL" --name="$APP_NAME" --class="$APP_NAME" --window-size=800,600 --no-sandbox
Terminal=false
Type=Application
Icon=$ICON_PATH
Categories=GTK;
MimeType=text/html;text/xml;application/xhtml_xml;
StartupNotify=true
EOF

  # 设置桌面文件为可执行
  chmod +x "$DESKTOP_FILE"
}

# 移除通过web2app创建的网页应用
web2app-remove() {
  # 检查参数数量是否正确
  if [ "$#" -ne 1 ]; then
    echo "Usage: web2app-remove <AppName>"
    return 1
  fi

  # 设置变量
  local APP_NAME="$1"  # 应用名称
  local ICON_DIR="$HOME/.local/share/applications/icons"  # 图标目录
  local DESKTOP_FILE="$HOME/.local/share/applications/${APP_NAME}.desktop"  # 桌面文件路径
  local ICON_PATH="${ICON_DIR}/${APP_NAME}.png"  # 图标文件路径

  # 删除桌面文件和图标
  rm "$DESKTOP_FILE"
  rm "$ICON_PATH"
}

# 确保使用fn键的外部键盘默认使用F键（而不是多媒体键）
alias fix_fkeys='echo 2 | sudo tee /sys/module/hid_apple/parameters/fnmode'

# 修复Spotify窗口在某些显示器上过大的问题，通过缩放因子调整大小
alias fix_spotify_window_size="sudo sed -i 's|^Exec=.*|Exec=spotify --force-device-scale-factor=1.5 %U|' /usr/local/share/applications/spotify.desktop"
